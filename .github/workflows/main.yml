name: ðŸ¤– Deploy Bot to Pterodactyl Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name:  ðŸ”’ Create .env file
      run: |
        echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
        echo "PTERODACTYL_API_KEY=${{ secrets.PTERODACTYL_API_KEY }}" >> .env
        echo "PTERODACTYL_SERVER_ID=${{ secrets.PTERODACTYL_SERVER_ID }}" >> .env
        echo "PTERODACTYL_BASE_URL=${{ secrets.PTERODACTYL_BASE_URL }}" >> .env
        echo "ADMIN_USERS=${{ secrets.ADMIN_USERS }}" >> .env
        echo "PZ_SERVER_IP=${{ secrets.PZ_SERVER_IP }}" >> .env
        echo "PZ_SERVER_PORT=${{ secrets.PZ_SERVER_PORT }}" >> .env
        echo "STEAM_API_KEY=${{ secrets.STEAM_API_KEY }}" >> .env
        echo "LOG_CHANNEL_ID=${{ secrets.LOG_CHANNEL_ID }}" >> .env

    - name: Install lftp
      run: sudo apt-get install lftp

    - name: ðŸ“‚ Copy files via FTP
      run: |
        lftp -e "
        set sftp:auto-confirm yes
        set net:timeout 30
        set net:max-retries 3
        open -u ${{ secrets.SFTP_USERNAME }},${{ secrets.SFTP_PASSWORD }} sftp://${{ secrets.SFTP_URL }}:${{ secrets.SFTP_PORT }}
        mirror --reverse --delete --verbose --exclude .git --exclude .npm --exclude node_modules --only-newer ./ ./
        bye
        "

    - name: ðŸš€ Restart Discord bot
      run: |
        curl --location "${{ secrets.DISCORD_PTERODACTYL_API_POWER_URL }}" \
        --header 'Content-Type: application/json' \
        --header "Authorization: Bearer ${{ secrets.DISCORD_PTERODACTYL_API_BEARER_TOKEN }}" \
        --data '{
          "signal": "restart"
        }'
